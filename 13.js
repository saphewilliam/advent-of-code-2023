const input = `.##...#..##
.....##...#
#..#..###..
#..#####..#
####.##.##.
####.##.##.
#..#####..#
#..##.###..
.....##...#
.##...#..##
.##..#.##.#
........###
.....#...#.
....#.#.##.
#..##..###.
#..###..#.#
#..#...#.##

##....##.#.
##.##.#..#.
..####....#
#######..##
##..#......
...##......
###....##..
..#.#..##..
...#.#....#
..##.......
..##.#.##.#
##...##..##
######.##.#
###...#..#.
...###....#
..##.......
###.##....#

.#.#....#.#.###
...#....#...#..
....####....#..
.#.######.#..##
###..##..###...
.#...##...#.###
..##....##.....
.#...##...#..##
..##....##..#..
.##########....
##.#.##.#.##...
....####.....##
##...##...##.##
##.#.##.#.##.##
...#....#...###
##...##...#####
....#..........

######.###.#..#
.....#.####.#..
.....#.####.#..
######.###.##.#
.###..#.#....##
.###..#.#....##
######.###.##.#
.....#.####.#..
.....#.####.#..
######.###.#..#
.#.#######.##..
.....#..##.#.#.
###....##.##...
.#..#..#...####
.#...#..#.#....

..#.#....#....#
..#.#....#....#
..##.#..#..##..
#.#.##.#.#.##.#
####.###.#.##.#
.####.######.##
##.#....#.####.
.####.###.#..#.
#..##...#.#..#.

###....##
####..###
##.#..#.#
....##...
##.#..#.#
##.####.#
..##..##.
...#..#..
..##..##.
..######.
####..##.

..#.###.#...#..
###.##.#...####
..#.#..#.....##
..##........##.
...#..#.###.#..
...#..#.###.#..
..#.........##.

.#..##..#.##.
.##.##.##....
..######..##.
...#..#......
#.#.##.#.####
.#..##..#####
.#.#..#.#....
##.#..#.##..#
..#....#.....

.##..##.####...
.##..##..#.###.
#..##..#.##.#.#
.######.#..#...
#..##..###...##
#..##..####.#.#
#..##..###.#..#

.###.#..#.#.#.#
#.##.#..##..#.#
.#.#.##.##..###
.#.#.##.##..###
#.##.#..##..#.#
.#####..#.#.#.#
....#...#.##...
#..##..#..###..
.#.#.#.####.###
####.#...#..#.#
#.#.#.###.###..
#.#.#.###.###..
####.#...#..#.#

........#..#....#
############.....
#########.##.....
........#..#....#
.######..##..#.#.
.##..##..#..#####
........##..#####
#.#..#.#..#...#..
#......#.#..#.##.
##....##...##.##.
#.#..#.#.#.##..##

#..#...
#..####
####.#.
####.#.
####.#.
####.#.
#..####
#..#...
.##.###
.##.#..
####..#
#####..
...####
#..##..
.##.##.
#..#.#.
#..#..#

.##...#####
....##..##.
##.#..##..#
######.....
####..#####
.##.###.##.
........##.
.....#..##.
.##.#.#....
....#......
#..#.#.#..#
.......#..#
.##........

#..####.#####
#..##....####
.##.#.####.##
.##.###..#...
#..#####..#..
.##.##.#.#...
.##..#.##....
######..#.#..
#..#..##.####
.....#....###
.##...##.#...
#..#.#.#.....
.....#.####..
#..#...##..##
.....#.####..
.##.#..######
.##.........#

#....#..###
.##.###.#..
....#...#..
#.#.##.#...
#.####.#.##
##..#.#.###
##..#.#.###
#.####.#.##
#.#.##.#...
....#...#..
.##.###.#..
#....#..###
#.#.#..##..
.#.##.##..#
####..#.#..

#.#########
.#.....#..#
##.#..#....
##.#..#....
.#.....#..#
#.#########
###....#...

#.##.#.
#.####.
..#...#
...#...
.#.#.#.
.#.#.#.
...#...
..#...#
#.####.

##.####
######.
######.
######.
######.
..##...
#.##.##
#....#.
#....#.

#.#.#..#.#.#.
#..#.##.#..#.
.###.##.###.#
...#.##.#...#
...#.##.#...#
.###.##.###.#
#..#.##.#..#.
#.#.#..#.#.#.
...##..##....
#.#......#.##
##.#.##.#.##.
#..######..#.
.##......##.#
.##.####.##..
.#.##.###.#..

.....#..##.##
.....#..##.##
..#..###...#.
.##..###.#...
#.#.#####.##.
#...###.####.
#..###...###.
...#..####...
###.#.#.#.#.#
##.#.##..#...
####...#..#.#
.#..#####.#..
.#..#####.#..
####...#..#.#
##.#.##..#...
###.#.#.#.#.#
.#.#..####...

#####.##....###
##.##.##....###
##.##.##....###
#####.##....###
.####.#.....#.#
#..#..#...#..##
###...####.#.#.
..####.#.##.#..
#.#.##...##..##
....##.#.######
...##..##..#.#.
...#..#.#..###.
#..#.#.#...#.##
.##.#.#..##.##.
...###..##.#..#
####.#.#.#....#
#...#.#..#...##

..######.
.####.###
..#....#.
#.######.
#.######.
...####..
...#..#..
.##....##
.##....##

.#.#.##...#.#
..#.##.....#.
#...#..#.####
#...#..#.####
..#.##....##.
.#.#.##...#.#
..###.#.#...#
.#.#..###....
.#..###.#....
..##.#..###.#
##.####.###..
####...######
###...##.#.##
###...##.#.##
####...######
##.####.###..
..##.#..###.#

..#....##.#
.....#.#..#
.....#.#..#
..#.....#.#
###..#.####
.###...##..
#.###.###..
###.###.###
###.#..##..
#.##.###...
#.#.#..####
.#.#.##..#.
#####.##..#
#.#######..
#.#######..
#####.##..#
.#.#.##..#.

##.##..##
#.##.##.#
##.#..#.#
.#..####.
.#..#..#.
#..######
.#..#..#.
##..#..#.
.#.######
#...####.
.##......
.##......
#...####.
.#.######
##..#..#.

...#....#....
####....#####
#..#.##....##
#.#..##..#.##
###.#..#.####
##........###
#..#.##.#..##
.##.####.##..
.####..####..

###..###.######.#
###..####.####.##
........#.#..#.#.
...##...########.
#.####.##########
#..##..###....###
.#....#...##.#...

...##...####.
#.####.#.##.#
.######.#..#.
#.######....#
........#..#.
########.##.#
########....#
#########..##
.##..##..##..
#......##..##
.######..##..
########....#
.######......
###..########
##.##.##.##.#

##..#..##..#.
..#.#......#.
......#..#...
....##....##.
..#.#......#.
...####..####
##..#..##..#.
......#..#...
......#..#...
###.###..###.
##.#...###..#

####.####
.#.......
.#.......
#.##.####
..#.....#
..#.....#
#.##.####
.#.......
.#.......
####.####
..#.#..##
####.....
#.....###

...#..#...#..
...#..#...#..
#.##..##.#..#
....##......#
####..####.##
..######.....
##.####.###..
#...##...####
#...##...#.#.
#..#..#..#..#
#.#.##.#####.
..#....#...#.
...####...#..
#........#.#.
...#..#...#..
#.#....#.#.#.
#..####..####

...###.#...#.##
...###.#...#.##
..##.....#.##..
#...#....##.#.#
...###......#.#
####.#.#..#.#..
..##....##.#.#.
.#..###.##..###
##.###.#..##..#
.#.#...##.#...#
...#..###..##..
#...##.#.######
###.####.#.....
#..#.#.#.#...#.
#..#.#.#.#...##
###.####.#.....
#...##.#.######

##.#.#.##..##.#
##.#####....###
##.#...##..##..
##.###.##..##.#
.....#.######.#
..##.#..#..#..#
######.#....#.#
..#.....#..#...
##.###...##....

####..#..
#...#...#
###.##.##
##...#.##
.#.#.##..
.#.#.##..
##...#.##

...##....#..#
##....##.#.##
.........####
########.....
##.##.##.####
#########..##
#..##..#.#.#.
.........#...
##....####..#
...##.....#..
........####.
##....##..#..
########..###

#.#.#..#.
..##.##.#
..##..#.#
#..####.#
.##.#..#.
.##.#..#.
#..####.#
...#..#.#
..##.##.#
#.#.#..#.
####..###
...#..#.#
####...##
####...##
...#..#.#
####..###
#.#.#..#.

...######....##
#..#.##.#..####
###..##..###...
#..#....#..##..
..##.##.##...##
##.#....#.###..
.##########.#..
...######...###
#..##..##..##..
.#.#.##.#......
##.##..##.###..

....#..
..#....
..####.
..#.##.
..#.##.
..####.
..##...
....#..
##..#..
##...##
..#####

....#..#...
##.######.#
##...##...#
..########.
#..#.##.#..
#.#..##..#.
#.#..##..#.
...#.##.#..
..########.
##...##...#
##.######.#
....#..#...
#.#......#.
#.########.
..########.
##........#
..##.##.##.

##.#.#..#....
#..#....#####
##..##..#....
##.###.#..##.
##..####.#..#
#.##..##..##.
.#.#.#..#....
......##.####
.##.##.######
####.##..####
#.##...#.....
#..###.##....
...###.##....
#.##...#.....
####.##..####

...##..#.
...##....
###.##.#.
....#.#..
###.####.
...##..#.
##...##..
....###..
....##..#

#.##..####.
#.#...####.
###....###.
#....###..#
###.#...###
###.#...###
#....###..#
###....###.
#.#...####.
#.##..####.
#.#.#...###
#.#####.#.#
.#..##.#.#.

..#...#..##
##.####....
..#.#..#.##
###..##..##
##...#.###.
......##.#.
......##.#.
##...#.####
###..##..##

###....####.##.
.##...###.###.#
#.#.##.#.#..##.
##########.#..#
..........###..
.##....##......
#...##...##.###
#...##...##.###
.##....##......

...####.#..#..#
##..###.##..##.
##..###.##..##.
...####.#..#..#
###.###...#.##.
..#...#....#..#
#...##..#..#..#
..#......######
#...###...##..#
.#.##..#.###..#
....##.##..##.#

.#..###
#.#..##
##.####
#...###
#.##...
..#.#..
..##..#
##.#...
##.#...

....#....#.....
..###....###...
#....####....##
##..##..##..###
###..#..#..##..
#...#....#...##
.#.##.##.##.#..
######..#######
##..##..##..###
....######.....
###.##..##.####
..##.####.##...
###.#....#.####

#..##..##
..#..##..
.#.#.##.#
.#.#.##.#
..#..##..
#..##..##
.##..##..
##.#.##.#
...######
..#.####.
###.....#
.####..##
#...####.

##.###..#..#..#
.#.###..#..#..#
.###.#.#....#.#
.##...########.
.#..#.#......#.
.#.#####.##.###
#..###...##...#
##.#..########.
#..#.###....###

.###..###.#
#..#..##.#.
.#.#..#.#.#
.###..###..
.##.##.##..
#..#..#..#.
#..#..#..#.
.##.##.##..
.###..###..

..#.#####.#.##.
..####.#...#.##
...#..#.####..#
...###.###..###
##.#####.......
##.#####.#.....
...###.###..###

#...#.####.#.
#...#.####.#.
..##..#..#..#
##.#.##..##.#
..#.#.#..#.#.
#.###########
##..#........
..#..##..##..
#.#.#......#.

...#..#....##
##.#..#.###..
#.######.#...
#.#.##.#.####
###....###.##
..........###
...#..#...#..
#........#...
.########.###
...#..#....##
##..##..#####
.#...#..#..##
##########...

.#####.########
#.###..#.#.####
##.#...##.#....
##..######.....
..###.#..###..#
...#..#.#......
.#..#...#..####
##.......#.....
###.#.#####....

..#.##.#.
..#.##.#.
#.###.##.
#..##....
.#.#..#.#
.#.#.##.#
###.##.#.
####..#..
..###..#.
#.#...##.
#.#...##.
..###..#.
###...#..
###.##.#.
.#.#.##.#

#..##..##
#..##..##
#..#####.
####..#..
.#.......
.#.......
####..#..
#..#####.
#.###..##

.##.#....#.#.####
.##.#....#...####
#####.##...###.##
.##..#.##.....###
#####.#.###..#...
####.####.##..##.
.##..#..#.##.####
.##....##..####.#
.....#..###.#.#.#
....#.#.##..##.#.
....#.#..#.#.#...

###..##..
##.#....#
...####.#
##.#....#
..###..##
..#.#..#.
..###..##

.##..#...
.#.#.##..
##.#.....
#..####..
.##.#####
#...##...
#.#.##.##
#.#.##.##
#...##...
###.#####
#..####..
##.#.....
.#.#.##..

....#....#...
..##.####.##.
#....#..#....
##..##..##.##
...#..##..#..
#.#.#....#.#.
###.##..##.##
###.##..##.##
#.#.#....#.#.

.##.#..##
#..###..#
#..#####.
########.
#..#.#.#.
#..#.#.#.
########.
#..#####.
#..####.#

.#.....####....
..#..#......#..
..#.##..##..##.
.##....#..#....
...####.##.####
#...##.#..#.##.
#..############
.#.####....####
.##....####....

#...#.#....#.
#...#.#....#.
#..###.####.#
##..###.##.##
.#.#.#.#..#.#
#...#########
##.#.#.#.##.#
##..#...##...
.#..##.####.#
#.##.########
...###..##..#
##.##...##...
.#.###.#..#.#

##......#
#........
#.#.##.#.
.###..###
###....##
##......#
..#....#.
#.#....#.
##......#
###....##
.###..###
#.#.##.#.
#........
##......#
..######.
.#.####.#
###.##.##

#..#.##.#..
#..#.##.#..
###.####.##
.##....#.##
#...#..#...
..#.#..#.#.
..##....##.

.#...##
#.#.##.
..#.#.#
.#..###
##.....
##.....
.#..###
..#.#.#
#.#.##.
.#...##
##.....
##.#..#
..#.##.
##.#...
#..#...

..##..######.
.###..#....#.
.#.###.#..#.#
#..#...#.##..
...#.#.####.#
###.#.######.
.......####..
..#..#......#
########..###
########..###
..#..#......#

.#..##.#.##.#
.#..#..#.##.#
#.###.#..##..
..##..#.####.
....####....#
#....#.#....#
.#####..#..#.

.#.##....##.#....
##.#.#..#.#.####.
###.#.##.#.######
.###..##..###..##
#..#.#..#.#..##..
....##..##.......
.#.##.##.##.#..#.

..##......##.
..##..##..##.
......##.....
..###.##.###.
..###....###.
###.##..##.#.
###..####..##
###........##
####......###

#.#....#.#.##
.##..##..##.#
#.#......#.#.
#..#.##.#..#.
.#...##...#.#
##.######.###
###......####
.....##......
#..#....#..##
#..#....#..##
.....##......
###......####
##.######.###
.#...##...#.#
#..#.##.#..#.

.#..#..#.#....#
#.##.###......#
.####...#.##.##
......#.##...##
#....###..#.#..
..##..###.#####
#########..#..#
#########..#..#
..##..##..#####
#....###..#.#..
......#.##...##
.####...#.##.##
#.##.###......#

#...###
#..##.#
.#..##.
#.###..
#.###..
.#..##.
##.##.#
#...###
###.##.
.#....#
###....
..#...#
###.###
###.###
..#...#

##..#####
##..#####
.......#.
##..##...
#.##.#..#
#######..
.#..#.#.#
#.##.####
.####.#..
.......#.
#.#####.#

##########...#.##
#.##..##.#...####
#.######.#.####..
..........#.#.#..
###.##.####....##
###....####..####
##.####.##.##..##
####..#######....
..#.##.#...####..
####..########.##
...####...###..#.

#..###..#...#.#
#..###.##...#.#
#..###.##...#.#
#..###..#...#.#
.#.##.##....#.#
.###.#...#.#...
..#....##.#..##
.#.###..#..####
...####.#...#.#
.#.##..#.#.#..#
#.#.##.#.##.###
.#####.#..##..#
.#.#.##.##.####

.######..##
..#..#..###
.#.##.#.###
.#.##.#.#..
########...
..###....##
#.#..#.#.##
.##..##....
########.##
########...
.#....#....

##..#.###
#...#.###
#....##..
#....##..
#...#.###
##..#.###
##...#.#.
...##.##.
.##..#...
####..#.#
#..#..#.#
.#..#.#..
.#####.##
##..#.#.#
..####.#.
.#.#.....
##..#.###

...#####.####.###
###..#.#.#..#.#.#
.##...#........#.
.##...#........#.
###..#.#.#..#.#.#
...#####.####.###
..#.....#....#.#.

#.#.#..#.######.#
.#.......##..##..
.#.......##..##..
#.#....#.######.#
...####.#.#..#.#.
#.#..#..########.
....#.#.#..##..#.

..##...
#.#.#..
#.#.#..
..##...
###.#..
...####
##.####
...###.
#...#..
..##...
.#..###
..#....
..##.##

####.....
..#...###
....##.##
#..##.###
.##..####
#.....#..
#.#####..
####...##
####...##
#.#.###..
#.....#..

......#.##.#...
####..######..#
#..####.#..####
....##..##..##.
.##.#..####..#.
####....##....#
.##.##......##.
.##..########..
#..#....##....#
.##..##.##.##..
....#.#....#.#.
.##...#.##.#...
#####.#.##.#.##
#..#.#..##..#.#
.##.....##.....

###..##..
.#..##...
.#.#.#.##
...#..###
..##.#...
#..##....
..#...#..
..#...#..
#..##....
..##.#...
...##.###
.#.#.#.##
.#..##...
###..##..
#.#..####

###.###
.#.##..
.#.##..
#.#....
####.##
#....##
##.#.##
###.#..
.#.#.##
...#...
.#.#...
###....
...#...
...#...
###....
.#.....
...#...

##...##....##
#....#..##..#
#..###.#..#.#
#...#.##..##.
#..###..##..#
..#..#..##..#
###..#.####.#
#.#.####...##
...#..#.##.#.
##.##.#....#.
.##...#.##.#.
....#.######.
###.....##...
#..##########
....#..#..#..
......######.
......######.

.#.....
......#
.####..
.####..
#....#.
.####.#
##..###
##..###
.####.#
#....#.
.####..

........##...
........#.#.#
...##........
##########.#.
.##..##..#...
########...##
........#....
.##..##.#.#..
#..##..###..#

#.##...####..#.##
.#..###.###.#..##
.##...#....#...##
.##...#....#...##
.#..###.###.##.##
#.##...####..#.##
#..####..##.##.##
.#...#....##.#.##
.##..###..#####..

......###
#..#.#...
.##...###
#..#...##
.##..##.#
####.##..
.##.##...
.##.#..##
####.....
......###
.##.##.##

.####...##.
..##....#..
..##....#..
.####...##.
..##.....##
########...
..##..#..#.
.......####
.......#.#.
.####.###..
#.##.##...#
#######....
#.##.##...#
.####.####.
#.##.####.#
..#...###..
#....##..#.

.#.#..#.#......
.#.#..#.#......
##..##.###.#..#
.###.#.....#...
...#.#.##..#..#
...##....##.##.
.#..#....##.##.

##..#......#..#
###.#..##..#.##
...#.##..##.#..
..#..######..#.
..#.###..###.#.
...###....###..
..###.####.###.
....#......#...
##..###..##...#
..##..#..#..##.
..##.#.##.#.##.

.#..##.#..#
...#..##..#
..#...##..#
..#...##..#
...#..##..#
.#..##.#..#
.#..#..##..
###.##.##.#
.###.#...#.
###.####...
##.###.#.##
#..#.#..###
.#.##...#..
#...#.#.##.
...#.#....#
####.#..###
.###.#..###

#..##.#
####.#.
.#.##.#
#.#....
#......
.#.##.#
####.#.
#..##.#
#.#.#..
#.#.#..
#..##.#

.#..##..#.##.#.
...###.#..##..#
.##.....#....#.
...#...###..###
.##.#..#.#..#.#
.##.##.###..#.#
##.##..########
###....#.#..#.#
.#...##.######.
##.#..#.######.
#.#..##..####..
######..##..##.
#.#..####....##
#.##.#.#.#..#.#
.#...#..#.##.#.
.#...#..#.##.#.
#.##.#.#.#..#.#

#....###.....
.#..###..####
.###...#.#..#
#####.....##.
##.##..######
#..##..######
#####.....##.
.###...#.#..#
.#..###..####
#....###.....
##.####......
#....##.#.##.
#...#..#.#..#
.##.#..#..##.
......#...##.

##..##.....
.##.#...###
.##.#...##.
##..##.....
#####.#...#
##.....###.
..#...#...#
..#...#...#
##.....###.
#####.#...#
##..##.....

..#...##...
...########
###..####..
..##..##..#
#..#.####.#
####.####.#
###.#.##.#.
....######.
..#........

.....#..#.#
.....#..#.#
..#.##...##
....##.###.
#..#....#..
..#.#.##.#.
#####.....#
#..#..#####
.###.......
.###.......
##.#..#####
#####.....#
..#.#.##.#.
#..#....#..
....##.###.
..#.##...##
.....#..#.#`;

const testInput = `#.##..##.
..#.##.#.
##......#
##......#
..#.##.#.
..##..##.
#.#.##.#.

#...##..#
#....#..#
..##..###
#####.##.
#####.##.
..##..###
#....#..#`;

const currentInput = input.split('\n\n');

function transposePattern(pattern) {
  return [...pattern[0]].map((_, col) => pattern.map((row) => row[col]).join(''));
}

function augmentPatterns(pattern) {
  const augmentedPatterns = [];
  for (let i = 0; i < pattern.length; i++) {
    for (let j = 0; j < pattern[i].length; j++) {
      const newPattern = [...pattern];
      newPattern[i] =
        newPattern[i].substring(0, j) +
        (newPattern[i][j] === '.' ? '#' : '.') +
        newPattern[i].substring(j + 1);
      augmentedPatterns.push(newPattern);
    }
  }
  return augmentedPatterns;
}

function traverseMirror(startPair, pairs) {
  let min = Math.min(...startPair);
  let max = Math.max(...startPair);

  while (max - min !== 1) {
    min++;
    max--;
    if (!pairs.has(`${min},${max}`)) return null;
  }
  return max;
}

function findMirrors(pattern) {
  const scan = pattern.reduce((p, c, i) => ({ ...p, [c]: [...(p[c] ?? []), i] }), {});
  const pairs = Object.values(scan);
  const minPair = pairs.find((v) => v.includes(0));
  const maxPair = pairs.find((v) => v.includes(pattern.length - 1));
  if (minPair.length === 1 && maxPair.length === 1) return [];

  const pairsSet = new Set();
  pairs.forEach((pair) => {
    for (let i = 0; i < pair.length; i++)
      for (let j = i + 1; j < pair.length; j++) pairsSet.add(`${pair[i]},${pair[j]}`);
  });

  const mirrors = [];
  if (minPair.length > 1) {
    for (let i = 1; i < minPair.length; i++) {
      const mirror = traverseMirror([minPair[0], minPair[i]], pairsSet);
      if (mirror !== null) mirrors.push(mirror);
    }
  }

  for (let i = maxPair.length - 2; i >= 0; i--) {
    const mirror = traverseMirror([maxPair[i], maxPair[maxPair.length - 1]], pairsSet);
    if (mirror !== null) mirrors.push(mirror);
  }

  return mirrors;
}

function getValidMirror(m, i, pattern) {
  const mirrors = m.filter((v) => {
    const span = Math.min(v - 1, pattern.length - v - 1);
    const minIndex = (v - 1 - span) * pattern[0].length;
    const maxIndex = (v + 1 + span) * pattern[0].length - 1;
    return i >= minIndex && i <= maxIndex;
  });
  return mirrors[0] ?? null;
}

let sum = [0, 0];
for (let i = 0; i < currentInput.length; i++) {
  const pattern = currentInput[i].split('\n');
  const patterns = augmentPatterns(pattern);
  const transposedPattern = transposePattern(pattern);
  const transposedPatterns = augmentPatterns(transposedPattern);

  const mirror1 = findMirrors(transposedPattern);
  const mirror2 = findMirrors(pattern);
  if (mirror1.length !== 0) sum[0] += mirror1[0];
  else if (mirror2.length !== 0) sum[0] += mirror2[0] * 100;

  const mirror3 =
    transposedPatterns
      .map(findMirrors)
      .map((m, i) => getValidMirror(m, i, transposedPatterns[i]))
      .filter((m) => m !== null)[0] ?? null;
  const mirror4 =
    patterns
      .map(findMirrors)
      .map((m, i) => getValidMirror(m, i, patterns[i]))
      .filter((m) => m !== null)[0] ?? null;
  console.log(mirror3, mirror4);
  if (mirror3 !== null) sum[1] += mirror3;
  else if (mirror4 !== null) sum[1] += mirror4 * 100;
}
console.log(sum);
